{
"version": "2",
"templates": [




{
"type": 1,
"title": "JFA-GO",
"name": "JFA-GO",
"note": "",
"description": "JFA-GO is a user management app for Jellyfin and Emby that provides invite-based account creation as well as other features that make one's instance much easier to manage.",
"platform": "linux",
"restart_policy": "unless-stopped",
"logo": "https://raw.githubusercontent.com/llllllllillllllillll/Portainer_Templates/main/images/jfa-go.png",
"image": "hrfee/jfa-go",
"categories": ["Management","Tools"],
"network_mode": "bridge",
"ports": ["8056:8056/tcp"],
"volumes": [{"bind": "/home/docker.data/jfa-go/config", "container": "/config"},
			{"bind": "/home/docker.data/jellyfin/config", "container": "/jf"},
			{"bind": "/etc/localtime", "container": "/etc/localtime"}],
"env": [{"name": "PUID", "label": "PUID", "default": "1000"},
        {"name": "PGID", "label": "PGID", "default": "1000"}]

},
{
"type": 1,
"title": "Nextcloud",
"name": "Nextcloud",
"note": "Create a MariaDB database for best performance, or let Nextcloud create a MySQL-lite database for quick deployment.",
"description": "Nextcloud is a suite of client-server software for creating and using file hosting services.",
"platform": "linux",
"restart_policy": "unless-stopped",
"logo": "https://raw.githubusercontent.com/llllllllillllllillll/Portainer_Templates/main/images/nextcloud.png",
"image": "nextcloud",
"categories": ["CMS","Tools"],
"network_mode": "bridge",
"ports": ["8080:80/tcp"],
"volumes": [{"bind": "/home/docker.data/nextcloud", "container": "/var/www/html"},
		{"bind": "/home/docker.data/nextcloud/apps", "container": "/var/www/html/custom_apps"},
		{"bind": "/home/docker.data/nextcloud/config", "container": "/var/www/html/config"},
		{"bind": "/home/docker.data/nextcloud/data", "container": "/var/www/html/data"},
		{"bind": "/home/docker.data/nextcloud/themes", "container": "/var/www/html/themes"}],
"env": [{"name": "PUID", "label": "PUID", "default": "1000"},
		{"name": "PGID", "label": "PGID", "default": "1000"}]

},
{
"type": 1,
"title": "Nginx Proxy Manager",
"name": "Nginx_Proxy_Manager",
"description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
"note": "Nginx Proxy Manager requires a MariaDB database to be created first",
"logo": "https://raw.githubusercontent.com/llllllllillllllillll/Portainer_Templates/main/images/nginx-proxy-manager.png",
"image": "jlesage/nginx-proxy-manager",
"categories": ["Networking","Tools"],
"platform": "linux",
"restart_policy": "unless-stopped",
"network_mode": "bridge",
"ports": ["81:8181/tcp",
		  "80:8080/tcp",
		  "443:4443/tcp"],
"volumes": [ {"bind": "/home/docker.data/nginx-proxy-manager/config", "container": "/config"}],
"env": [{"name": "PUID", "label": "PUID", "default": "1000"},
        {"name": "PGID", "label": "PGID", "default": "1000"},
        {"name": "DB_MYSQL_HOST", "label": "DB_MYSQL_HOST", "default": "localhost"},
        {"name": "DB_MYSQL_PORT", "label": "DB_MYSQL_PORT", "default": "3306"},
        {"name": "DB_MYSQL_USER", "label": "DB_MYSQL_USER", "default": ""},
        {"name": "DB_MYSQL_PASSWORD", "label": "DB_MYSQL_PASSWORD", "default": ""},
        {"name": "DB_MYSQL_NAME", "label": "DB_MYSQL_NAME", "default": ""}]

},
{
"type": 1,
"title": "MariaDB",
"name": "MariaDB",
"description": "An Enhanced drop in replacement for Mysql.",
"note": "",
"logo": "https://raw.githubusercontent.com/llllllllillllllillll/Portainer_Templates/main/images/mariadb.png",
"image": "mariadb",
"categories": ["Databases","Tools"],
"platform": "linux",
"restart_policy": "always",
"network_mode": "bridge",
"ports": ["3306:3306/tcp"],
"volumes": [{"bind": "/home/docker.data/mariadb", "container": "/var/lib/mysql"} ],
"env": [{"name": "PUID", "label": "PUID", "default": "1000"},
        {"name": "PGID", "label": "PGID", "default": "1000"},
		{"name": "MYSQL_ROOT_PASSWORD", "label": "MYSQL_ROOT_PASSWORD", "default": ""},
		{"name": "MYSQL_PASSWORD", "label": "MYSQL_PASSWORD", "default": ""},
		{"name": "MYSQL_DATABASE", "label": "MYSQL_DATABASE", "default": ""},
		{"name": "MYSQL_USER", "label": "MYSQL_USER", "default": ""} ]

},
{
"type": 1,
"title": "qBittorrent",
"name": "qBittorrent",
"description": "The qBittorrent project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
"note": "",
"logo": "https://raw.githubusercontent.com/llllllllillllllillll/Portainer_Templates/main/images/qbittorrent.png",
"image": "linuxserver/qbittorrent",
"categories": ["Downloads","Tools"],
"platform": "linux",
"restart_policy": "unless-stopped",
"network_mode": "bridge",
"ports": ["8081:8080/tcp"],
"volumes": [{"bind": "/home/docker.data/qbittorrent", "container": "/config",
			 "bind": "/media", "container": "/downloads"}],
"env": [{"name": "PUID", "label": "PUID", "default": "1000"},
        {"name": "PGID", "label": "PGID", "default": "1000"},
		{"name": "WEBUI_PORT", "label": "WEBUI_PORT", "default": "8081"}]

},
{
"type": 1,
"title": "Radarr",
"name": "Radarr",
"description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
"note": "",
"logo": "https://raw.githubusercontent.com/llllllllillllllillll/Portainer_Templates/main/images/radarr.png",
"image": "linuxserver/radarr",
"categories": ["Downloads","Tools"],
"platform": "linux",
"restart_policy": "unless-stopped",
"network_mode": "bridge",
"ports": ["7878:7878/tcp"],
"volumes": [{"bind": "/home/docker.data/radarr", "container": "/config",
			 "bind": "/media", "container": "/downloads"}],
"env": [{"name": "PUID", "label": "PUID", "default": "1000"},
        {"name": "PGID", "label": "PGID", "default": "1000"}]

},
{
"type": 1,
"title": "Sonarr",
"name": "Sonarr",
"description": "Sonarr is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
"note": "",
"logo": "https://raw.githubusercontent.com/llllllllillllllillll/Portainer_Templates/main/images/sonarr.png",
"image": "linuxserver/sonarr",
"categories": ["Downloads","Tools"],
"platform": "linux",
"restart_policy": "unless-stopped",
"network_mode": "bridge",
"ports": ["8989:8989/tcp"],
"volumes": [{"bind": "/home/docker.data/sonarr", "container": "/config",
			 "bind": "/dev/rtc", "container": "/dev/rtc",
			 "bind": "/media", "container": "/downloads"}],
"env": [{"name": "PUID", "label": "PUID", "default": "1000"},
        {"name": "PGID", "label": "PGID", "default": "1000"}]

}








	]
}